shiny::runApp()
runApp()
runApp('C:/Users/GodIsLord/Desktop/Nouveau dossier/Shiny_App')
runApp()
runApp('C:/Users/GodIsLord/Desktop/tests')
runApp()
runApp()
runApp()
runApp()
runApp()
options(expressions=)?
)
infinite recursion / options(expressions=)?
90: <Anonymous>
runApp()
library(readxl)
creditcard<- read_excel("E:/ORLEANS/Cours/Master 2 ESA/SVM/creditcardfraud/creditcard-Copie.xlsx")
creditcard$Class = as.factor(creditcard$Class)
s =
tune(svm, Class ~., data = resampling_train(),
ranges = list(cost = seq(1,10,5),
kernel = "linear"))
s =
tune(svm, Class ~., data = creditcard,
ranges = list(cost = seq(1,10,5),
kernel = "linear"))
s =
tune(svm, Class ~., data = creditcard,
ranges = list(cost = seq(1,10,5),
kernel = "linear"))
s =
y=  tune(svm, Class ~., data = creditcard,
ranges = list(cost = seq(1,10,5),
kernel = "linear"))
y
runApp()
x
x=data.frame(c("hyperparameter", "Cost","Gamma","Degree"))
x=data.frame(c("hyperparameter", "Cost","Gamma","Degree"))
x
x=data.frame(c("hyperparameter", "Cost","Gamma","Degree"))
data.frame(c("hyperparameter", "Cost","Gamma","Degree"))
x=data.frame(col1=c("hyperparameter", "Cost","Gamma","Degree"))
x
x=data.frame(hyperparameter=c("Cost","Gamma","Degree"),Radial_Basis=c(1,2,0),Polynomial=c(1,5,4),Sigmoid=c(7,4,0), Linear = c(1,0,0))
x
x=data.frame(hyperparameter=c("Cost","Gamma","Degree","Perfomance"),Polynomial=c(1,5,4,0.1),Radial_Basis=c(1,2,0,0.3),Sigmoid=c(7,4,0,0.8), Linear = c(1,0,0,0.01))
x
y = list(x,"the best is Radial")
y
t
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(degree=seq(0,10),gamma =seq(0.1,0.2,0.01) , cost = seq(1,2),
kernel=c("polynomial","radial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(degree=seq(0,2),gamma =seq(0.1,0.12,0.01) , cost = seq(1,2),
kernel=c("polynomial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t
class(t$best.parameters)
t$best.parameters[,1]
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(degree=seq(1,2),gamma =seq(0.1,0.12,0.01) , cost = seq(1,2),
kernel=c("polynomial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t$best.parameters[,1]
t
t$best.parameters[,2]
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(degree=seq(1,2),gamma =seq(0.1,0.12,0.01) , cost = seq(1,2),
kernel=c("radial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(gamma =seq(0.1,0.12,0.01) , cost = seq(1,2),
kernel=c("radial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t
t$best.parameters[,1]
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(cost = seq(1,2),gamma =seq(0.1,0.12,0.01) ,
kernel=c("radial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(cost = seq(1,2),
kernel=c("linear")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t
runApp()
t=tune(svm, Class ~ .,data = creditcard,
ranges = list(cost = seq(1,2),
kernel=c("linear","polynomial")),
tunecontrol = tune.control(sampling ="cross", cross=2))
t
t$best.model
t$best.parameters
t$best.performance
t$performances
runApp()
